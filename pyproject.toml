[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "hybrid-rag-platform"
version = "1.0.0"
description = "Production-ready hybrid RAG AI platform with multi-model routing and personalization"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
pgvector = "^0.2.4"
redis = "^5.0.1"
celery = "^5.3.4"
openai = "^1.3.0"
anthropic = "^0.7.0"
google-generativeai = "^0.3.0"
litellm = "^1.15.0"
# Large ML dependencies commented out for faster builds
# sentence-transformers = "^2.2.2"
# transformers = "^4.36.0"
# torch = "^2.1.0"
unstructured = "^0.11.0"
presidio-analyzer = "^2.2.33"
presidio-anonymizer = "^2.2.33"
langchain = "^0.1.0"
langchain-community = "^0.0.20"
pandas = "^2.1.0"
numpy = "^1.25.0"
scikit-learn = "^1.3.0"
httpx = "^0.25.0"
aiofiles = "^23.2.1"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
structlog = "^23.2.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
prometheus-client = "^0.19.0"
typer = "^0.9.0"
rich = "^13.7.0"
pyyaml = "^6.0.1"
jinja2 = "^3.1.2"
markdown = "^3.5.1"
beautifulsoup4 = "^4.12.2"
pytesseract = "^0.3.10"
pillow = "^10.1.0"
fpdf2 = "^2.7.6"
reportlab = "^4.0.7"
authlib = "^1.2.1"
cryptography = "^41.0.7"
bcrypt = "^4.1.2"
argon2-cffi = "^23.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
pre-commit = "^3.6.0"
factory-boy = "^3.3.0"
faker = "^20.1.0"
httpx = "^0.25.0"
pytest-xdist = "^3.5.0"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "unstructured.*",
    "presidio_analyzer.*",
    "presidio_anonymizer.*",
    "sentence_transformers.*",
    "transformers.*",
    "torch.*",
    "pgvector.*",
    "pytesseract.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]